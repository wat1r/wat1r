斐波那契数列 1 1  2 3 5  8 13 21 34 56......
斐波那契数列解决鸡兔同笼问题,运用递归思想
//第一种解法：
public class Recursive3 {
	public static void main(String[] args) {
		int i = 0;
		for(i=1;i<=20;i++){
			System.out.print(Fib(i)+" ");
		}
	}
	public static long Fib(int n){
		if(n==1||n==2){//如果n等于1或是等于2时，其返回1
			return 1;
		}else{
			return Fib(n-1)+Fib(n-2);//如果n大于2时，其等于前两项之和，调用其自身的递归
		}
	}
}
//第二种解法：
public class Recursive4 {

	public static void main(String[] args) {
		Fib f = new Fib();
		for(int i=1;i<=20;i++){
			System.out.println(f.Fib(i));
		}
	}
}
//创建一个Fib类 通过实例化该类打达到目的
class Fib{
	public long Fib(int n){
		if(n==1||n==2){
			return 1;
		}else{
			return Fib(n-1)+Fib(n-2);
		}
	}
}
